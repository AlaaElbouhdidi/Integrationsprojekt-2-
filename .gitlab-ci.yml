workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - if: $CI_COMMIT_BRANCH == "main"
      when: always
    - if: $CI_COMMIT_BRANCH == "develop"
      when: always
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: never

stages:
  - format
  - lint
  - doc
  - build
  - test
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - server/node_modules/

format-frontend:
  stage: format
  script:
    - npm run format

format-backend:
  stage: format
  script:
    - npm run --prefix server format

lint-frontend:
  stage: lint
  script:
    - npm run lint

lint-backend:
  stage: lint
  script:
    - npm run --prefix server lint

doc-frontend:
  stage: doc
  script:
    - npm run doc

doc-backend:
  stage: doc
  script:
    - npm run --prefix server doc

build-frontend:
  stage: build
  needs: ["lint-frontend", "format-frontend", "doc-frontend"]
  script:
    - echo "Building Angular"
    - npm ci
    - npx cypress cache path
    - npx cypress cache list
    - npm run build

build-backend:
  stage: build
  needs: ["lint-backend", "format-backend", "doc-backend"]
  script:
    - npm ci --prefix server
    - npm run --prefix server build

test-frontend:
  stage: test
  needs: ["build-frontend"]
  script:
    - npm run test:ci
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml

test-backend:
  stage: test
  needs: ["build-backend"]
  script:
    - npm run --prefix server test:ci
  artifacts:
    when: always
    reports:
      junit:
        - server/junit.xml

e2e-frontend:
  stage: test
  needs: ["test-frontend"]
  image: cypress/base
  script:
    - npm ci
    - npm run start &
    - npm run test:cy:run
  artifacts:
    when: always
    paths:
      - cypress/videos/**/*.mp4
      - cypress/screenshots/**/*.png

e2e-backend:
  stage: test
  needs: ["test-backend"]
  script:
    - npm run --prefix server test:e2e

deploy-frontend:
  stage: deploy
  needs: ["e2e-frontend", "test-frontend"]
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
  script:
    - firebase deploy --token "$FIREBASE_TOKEN"

deploy-backend:
  stage: deploy
  needs: ["e2e-backend", "test-backend"]
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
  script:
    - firebase deploy --only functions --token "$FIREBASE_TOKEN"
