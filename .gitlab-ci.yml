workflow:
    rules:
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
          when: always
        - if: $CI_COMMIT_BRANCH == "main"
          when: always
        - if: '$CI_PIPELINE_SOURCE == "push"'
          when: never

stages:
    - build
    - prep
    - test
    - deploy

variables:
    CYPRESS_CACHE_FOLDER: 'cache/Cypress'

cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        - node_modules/
        - cache/Cypress
        - dist

before_script:
    - apk add git
    - git fetch --no-tags --progress $CI_REPOSITORY_URL +refs/heads/main:refs/main

build:
    stage: build
    script:
        - npm ci
        - npx cypress cache path
        - npx cypress cache list
        - npx nx run-many --target=build --parallel --all
    artifacts:
        paths:
            - dist

format:
    stage: prep
    needs: ['build']
    script:
        - npm run format:check

lint:
    stage: prep
    needs: ['build']
    script:
        - npm run lint

doc:
    stage: prep
    needs: ['build']
    script:
        - npx nx run-many --target=compodoc --parallel --all
    artifacts:
        when: always
        paths:
            - dist/apps/api/docs

test:
    stage: test
    needs: ['build', 'format', 'lint', 'doc']
    script:
        - npx nx run-many --target=test --parallel --all

e2e:
    stage: test
    needs: ['build', 'format', 'lint', 'doc']
    image: cypress/base
    before_script:
        - apt install git
        - git fetch --no-tags --progress $CI_REPOSITORY_URL +refs/heads/main:refs/main
    script:
        - npx nx run-many --target=e2e --all
    artifacts:
        when: always
        paths:
            - dist/cypress/apps/**/*.mp4

deploy-frontend:
    stage: deploy
    needs:
        - job: e2e
        - job: test
        - job: build
          artifacts: true
    before_script:
        - npm i -g firebase-tools
    script:
        - firebase deploy --only hosting --token "$FIREBASE_TOKEN"
    only:
        refs:
            - main

deploy-backend:
    stage: deploy
    needs:
        - job: e2e
        - job: test
        - job: build
          artifacts: true
    before_script:
        - npm i -g firebase-tools
    script:
        - firebase deploy --only functions --token "$FIREBASE_TOKEN"
    only:
        refs:
            - main
