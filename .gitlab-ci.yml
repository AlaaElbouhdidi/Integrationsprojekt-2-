workflow:
    rules:
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
          when: always
        - if: $CI_COMMIT_BRANCH == "main"
          when: always
        - if: '$CI_PIPELINE_SOURCE == "push"'
          when: never

cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        - node_modules/
        - cache/Cypress
        - dist

variables:
    CYPRESS_CACHE_FOLDER: 'cache/Cypress'
    NX_CLOUD_DISTRIBUTED_EXECUTION: 'true'

stages:
    - setup
    - build
    - test
    - deploy

install-dependencies:
    stage: setup
    interruptible: true
    script:
        - npm ci
    artifacts:
        paths:
            - node_modules

.distributed:
    interruptible: true
    only:
        - main
        - merge_requests
    needs:
        - install-dependencies
    artifacts:
        paths:
            - node_modules/.cache/nx

build:
    stage: build
    extends: .distributed
    before_script:
        - apk add git
        - git fetch --no-tags --progress $CI_REPOSITORY_URL +refs/heads/main:refs/main
    script:
        - npm run format:check
        - NX_CLOUD_DISTRIBUTED_EXECUTION=false npx nx build-functions api
        - npx nx affected --base=HEAD~1 --target=build --parallel --max-parallel=3
        - npx nx affected --base=HEAD~1 --target=lint --parallel --max-parallel=3
        - npx nx affected --base=HEAD~1 --target=compodoc --parallel --max-parallel=3
    artifacts:
        paths:
            - dist

test:
    stage: test
    extends: .distributed
    needs:
      - build
    image: cypress/base
    before_script:
        - apt install git
        - git fetch --no-tags --progress $CI_REPOSITORY_URL +refs/heads/main:refs/main
    script:
        - npx nx affected --base=HEAD~1 --target=test --parallel --max-parallel=3
        - npx nx affected --base=HEAD~1 --target=e2e --parallel --max-parallel=3
    artifacts:
        when: always
        paths:
            - dist/cypress/apps/**/*.mp4

deploy:
    stage: deploy
    needs:
        - job: build
        - job: test
          artifacts: true
    before_script:
        - npm i -g firebase-tools
    script:
        - firebase deploy --token "$FIREBASE_TOKEN"
    only:
        refs:
            - main
